# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8
#===============设置字体===============
font pango:Source Code Pro 13px #, EmojiOne Color 10
# font pango:Noto Sans CJK SC 13


# set default desktop layout (default is tiling)
# workspace_layout tabbed <stacking|tabbed>

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window pixel 1
new_float normal

# Hide borders
hide_edge_borders none

# change borders
bindsym $mod+u border none
bindsym $mod+y border pixel 1
bindsym $mod+n border normal

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font xft:URWGothic-Book 11

#===============自动启动===============
exec --no-startup-id pulseaudio
exec --no-startup-id nm-applet
exec --no-startup-id thunderbird
exec --no-startup-id pamac-tray
exec --no-startup-id /usr/lib/polkit-1-dde/dde-polkit-agent

# screen off | sleep | shutdown(time unit: seconds)
#exec --no-startup-id xset dpms 300 1357 6789
exec --no-startup-id xset dpms 600

#===============音量控制===============
# bindsym XF86AudioRaiseVolume exec amixer -q set Master 1dB+ unmute
# bindsym XF86AudioLowerVolume exec amixer -q set Master 1dB- unmute
# bindsym XF86AudioMute exec amixer -q set Master toggle
# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +1% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -1% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound



# This font is widely installed, provides lots of unicode glyphs, right-to-left


# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod
# popups
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable

# float programs(find the programs'names in "/usr/share/applictions")
for_window [title="alsamixer"] floating enable border pixel 1
for_window [title="File Transfer*"] floating enable
# for_window [class="deepin-draw"] floating enable
for_window [class="mpv"] floating enable
for_window [class="Pamac"] floating enable
for_window [class="gimp"] floating enable
# for_window [class="pycharm"] floating enable
for_window [class="virtualbox"] floating enable

assign [class="Thunderbird"] 2
# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# window colors
#  class                 border   backgr.  text  indicator  child_border
client.focused          #4c7899  #285577  #ffffff  #2e9ef4   #285577
client.focused_inactive #81c2d6  #5f676a  #ffffff  #484e50   #0b6e48
client.unfocused        #c9cabb  #222222  #888888  #292d2e   #222222
client.urgent           #2f343a  #900000  #ffffff  #199475   #900000
client.placeholder      #a2b4ba  #0c0c0c  #ffffff  #1793d0   #0c0c0c
client.background       #82abba

# start a terminal 
bindsym $mod+Return exec  --no-startup-id deepin-terminal
bindsym Ctrl+Mod1+t exec  --no-startup-id deepin-terminal 
bindsym Mod1+F2 exec  --no-startup-id deepin-terminal -q  

# start a sreenshot
bindsym Ctrl+Mod1+a exec  --no-startup-id deepin-screenshot

# kill focused window
bindsym Mod1+F4 kill
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
bindsym $mod+b workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# split in horizontal orientation
bindsym $mod+h split h  
#;exec notify-send 'tile horizontally'
# split in vertical orientation
bindsym $mod+v split v  
#;exec notify-send 'tile vertically'
# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
set $mode_system select: lock(L) exit(E) cancel(Esc)
bindsym $mod+Shift+e mode "$mode_system"
mode "$mode_system" {
    bindsym l exec --no-startup-id dde-lock
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym Escape mode "default"
}

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#===============状态栏===============
bindsym $mod+m bar mode toggle
bar {
    # output eDP-1 
    i3bar_command i3bar
    status_command i3status
    status_command exec ~/.config/i3status/netspeed.sh
    tray_output primary
    tray_padding 0
    # strip_workspace_numbers yes
    font pango: Icons 11
    # status_command py3status 
    position bottom
    # modifier Shift
    separator_symbol " | "
    mode dock
    # output eDP1

    colors {
        background #285477
        statusline #dedede
        separator #2d2d2d
        focused_workspace #636e88 #285de7 #dedfdg
        active_workspace #556677 #234567 #56ef67
        inactive_workspace #636d72 #2d2d2d #dedede
        urgent_workspace #ffffff #900000 #d23d32
    }
}
 

#############################
### settings for i3-gaps: ###
#############################

# Set inner/outer gaps
gaps inner 6
gaps outer -2

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
} 